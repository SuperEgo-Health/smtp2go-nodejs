{"version":3,"file":"index.js","mappings":"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","sources":["webpack://SMTP2GOAPI/webpack/universalModuleDefinition","webpack://SMTP2GOAPI/external commonjs \"mime-types\"","webpack://SMTP2GOAPI/external node-commonjs \"fs\"","webpack://SMTP2GOAPI/external node-commonjs \"path\"","webpack://SMTP2GOAPI/webpack/bootstrap","webpack://SMTP2GOAPI/webpack/runtime/compat get default export","webpack://SMTP2GOAPI/webpack/runtime/define property getters","webpack://SMTP2GOAPI/webpack/runtime/hasOwnProperty shorthand","webpack://SMTP2GOAPI/webpack/runtime/make namespace object","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/regenerator\"","webpack://SMTP2GOAPI/external commonjs \"axios\"","webpack://SMTP2GOAPI/./src/lib/client.ts","webpack://SMTP2GOAPI/./src/lib/service.ts","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/get\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://SMTP2GOAPI/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://SMTP2GOAPI/./src/lib/mailAttachment.ts","webpack://SMTP2GOAPI/./src/lib/mailService.ts","webpack://SMTP2GOAPI/./src/lib/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SMTP2GOAPI\"] = factory();\n\telse\n\t\troot[\"SMTP2GOAPI\"] = factory();\n})(global, function() {\nreturn ","module.exports = require(\"mime-types\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import BuildsRequest from \"./buildsrequest\";\nimport axios from \"axios\";\nexport default class SMTP2GOApiClient {\n  apiKey: string;\n  apiUrl = \"https://api.smtp2go.com/v3/\";\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  setApiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async consume(service: BuildsRequest): Promise<any> {\n    const body = await service.buildRequestBody();\n    body[\"api_key\"] = this.apiKey;\n    try {\n      const { data } = await axios({\n        method: service.getMethod(),\n        url: this.apiUrl + service.getEndpoint(),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        data: body,\n      });\n      return data;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.error(error.message);\n        return error.response;\n      } else {\n        console.error(error.message);\n        return error.response;\n\n      }\n    }\n  }\n}\n","import BuildsRequest from \"./buildsrequest\";\nimport { Method } from \"axios\";\nclass SMTP2GOService implements BuildsRequest {\n  method: Method;\n  endpoint: string;\n  requestBody?: Map<string, any>;\n\n  constructor(\n    endpoint: string,\n    requestBody?: Map<string, string | boolean>,\n    method?: Method\n  ) {\n    this.endpoint = endpoint;\n    this.requestBody = requestBody || new Map();\n    this.method = method || \"POST\";\n  }\n\n  getMethod(): Method {\n    return this.method;\n  }\n\n  getEndpoint(): string {\n    return this.endpoint;\n  }\n\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    return await Promise.resolve(Object.fromEntries(this.requestBody));\n  }\n}\nexport default SMTP2GOService;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","import Attachment from \"./types/attachment\";\nconst fs = require('fs').promises;\nconst mime = require('mime-types');\nconst path = require('path');\nexport default class MailAttachment implements Attachment {\n    filepath: string;\n    filename: string;\n    fileblob: string;\n    mimetype: string;\n    constructor(filepath: string) {\n        this.filepath = filepath;\n        this.mimetype = mime.lookup(this.filepath);\n        this.filename = path.basename(this.filepath);\n    }\n    /**\n     * Get the base64 encoded file content\n     * @returns Promise<string>\n     */\n    async getFileBlob(): Promise<string> {\n        this.fileblob = await fs.readFile(this.filepath, { encoding: 'base64' }).catch((err: any) => {\n            throw err\n        });\n        return this.fileblob;\n    }\n    forSend() {\n        return { filename: this.filename, fileblob: this.fileblob, mimetype: this.mimetype };\n    }\n\n}","import MailAttachment from './mailAttachment';\nimport SMTP2GOService from './service';\nimport Address from './types/address';\nimport { AddressCollection } from './types/addressCollection';\nimport { AddressType } from './types/addressType';\nimport Attachment from './types/attachment';\nimport { AttachmentCollection } from './types/attachmentCollection';\nimport Header from './types/header';\nimport { HeaderCollection } from './types/headerCollection';\n\nexport default class mailService extends SMTP2GOService {\n    htmlBody: string;\n    textBody: string;\n    fromAddress: Address;\n    toAddress: AddressCollection;\n    ccAddress: AddressCollection;\n    bccAddress: AddressCollection;\n    subjectLine: string;\n    templateId: string;\n    templateData: JSON;\n    customHeaders: HeaderCollection;\n    attachments: AttachmentCollection;\n    constructor() {\n        super('email/send');\n        ['toAddress', 'ccAddress', 'bccAddress', 'customHeaders', 'attachments'].forEach(item => this[item] = []);\n    }\n    addAddress(address: Address, type?: AddressType) {\n        switch (type) {\n            case 'cc':\n                this.ccAddress.push(address);\n                break;\n            case 'bcc':\n                this.bccAddress.push(address);\n                break;\n            case 'to':\n            default:\n                this.toAddress.push(address);\n                break;\n        }\n        return this;\n    }\n    html(content: string) {\n        this.htmlBody = content;\n        return this;\n    }\n    text(content: string): this {\n        this.textBody = content;\n        return this;\n    }\n    from(from: Address): this {\n        this.fromAddress = from;\n        return this;\n    }\n    to(toAddress: Address | AddressCollection): this {\n        if (Array.isArray(toAddress)) {\n            toAddress.map(address => this.addAddress(address, 'to'));\n        } else {\n            this.addAddress(toAddress, 'to');\n        }\n        return this;\n    }\n    headers(header: Header | HeaderCollection): this {\n        if (Array.isArray(header)) {\n            this.customHeaders.push(...header);\n        } else {\n            this.customHeaders.push(header);\n        }\n        return this;\n    }\n    subject(subject: string): this {\n        this.subjectLine = subject;\n        return this;\n    }\n    attach(attachment: Attachment | AttachmentCollection | string): this {\n        if (typeof attachment === 'string') {\n            this.attachments.push(new MailAttachment(attachment));\n        } else if (Array.isArray(attachment)) {\n            this.attachments.push(...attachment);\n        } else {\n            this.attachments.push(attachment);\n        }\n\n        return this;\n    }\n    getFormattedAddresses(type: AddressType): Array<string> {\n        switch (type) {\n            case 'cc':\n                return this.ccAddress.map(this.formatAddress);\n            case 'bcc':\n                return this.bccAddress.map(this.formatAddress);\n            case 'to':\n            default:\n                return this.toAddress.map(this.formatAddress);\n        }\n    }\n    formatAddress(address: Address): string {\n        return address.name ? `${address.name} <${address.email}>`.trim() : `<${address.email}>`.trim();\n    }\n    async buildRequestBody(): Promise<Record<string, string | boolean>> {\n        this.requestBody = new Map();\n        this.requestBody.set('html_body', this.htmlBody);\n        this.requestBody.set('text_body', this.textBody || '');\n        this.requestBody.set('to', this.getFormattedAddresses('to'));\n        this.requestBody.set('sender', this.formatAddress(this.fromAddress));\n        this.requestBody.set('subject', this.subjectLine);\n        if (this.attachments.length) {\n\n            const promises: any[] = [];\n            this.attachments.forEach((attachment: MailAttachment) => {\n                promises.push(attachment.getFileBlob());\n            });\n            await Promise.all(promises).then(() => {\n                this.requestBody.set('attachments', this.attachments.map((attachment: MailAttachment) => attachment.forSend()));\n            });\n        }\n        return await super.buildRequestBody();\n\n    }\n}\n","import SMTP2GOApiClient from \"./client\";\nimport SMTP2GOService from \"./service\";\nimport MailService from \"./mailService\";\nimport MailAttachment from \"./mailAttachment\";\nexport { SMTP2GOApiClient as ApiClient };\nexport { SMTP2GOService as Service };\nexport { MailService };\nexport { MailAttachment };\n\nexport default function SMTP2GOApi(apiKey: string) {\n    return {\n        service: function (endpoint: string) {\n            return new SMTP2GOService(endpoint);\n        },\n        mail: function () {\n            return new MailService();\n        },\n        client: function () {\n            return new SMTP2GOApiClient(apiKey);\n        }\n    }\n}\n\n\n\n"],"names":["root","factory","exports","module","define","amd","global","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","SMTP2GOApiClient","apiKey","this","service","buildRequestBody","body","axios","method","getMethod","url","apiUrl","getEndpoint","headers","data","console","error","message","response","SMTP2GOService","endpoint","requestBody","Map","Promise","resolve","fromEntries","fs","mime","path","MailAttachment","filepath","mimetype","lookup","filename","basename","readFile","encoding","err","fileblob","mailService","forEach","item","address","type","ccAddress","push","bccAddress","toAddress","content","htmlBody","textBody","from","fromAddress","Array","isArray","map","addAddress","header","customHeaders","subject","subjectLine","attachment","attachments","formatAddress","name","email","trim","set","getFormattedAddresses","length","promises","getFileBlob","all","then","forSend","SMTP2GOApi","mail","MailService","client"],"sourceRoot":""}