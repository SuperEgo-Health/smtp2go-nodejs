{"version":3,"file":"index.js","mappings":";2DAAAA,EAAOC,QAAUC,cAA6CC,IAA7CD,CAAkD,eCAnEF,EAAOC,QAAUG,QAAQ,uBCAzBJ,EAAOC,QAAUC,cAA6CC,IAA7CD,CAAkD,UCC/DG,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaP,QAGrB,IAAID,EAASK,EAAyBE,GAAY,CAGjDN,QAAS,CAAC,GAOX,OAHAS,EAAoBH,GAAUP,EAAQA,EAAOC,QAASK,GAG/CN,EAAOC,OACf,CCrBAK,EAAoBK,EAAKX,IACxB,IAAIY,EAASZ,GAAUA,EAAOa,WAC7B,IAAOb,EAAiB,QACxB,IAAM,EAEP,OADAM,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACb,EAASe,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEjB,EAASgB,IAC5EE,OAAOC,eAAenB,EAASgB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCAlF,MAAM,EAA+BpB,QAAQ,wDCA7C,MAAM,EAA+BA,QAAQ,sDCA7C,MAAM,EAA+BA,QAAQ,mDCA7C,MAAM,EAA+BA,QAAQ,sDCA7C,MAAM,EAA+BA,QAAQ,2CCA7C,MAAM,EAA+BA,QAAQ,umBCEA,IACxBwB,EAAgB,WAOlC,OAAAC,KAFD,SAAAD,EAAYE,GAAgBC,IAAA,KAAAH,GAAAI,IAAA,sBAAAA,IAAA,cAHnB,+BAA6BA,IAAA,eACJ,CAAC,GAGjCC,KAAKH,OAASA,CAChB,GAAC,EAAAb,IAAA,YAAAiB,MAED,SAAUJ,GACRG,KAAKH,OAASA,CAChB,GAAC,CAAAb,IAAA,aAAAiB,MACD,SAAWC,GACTF,KAAKE,QAAUA,CACjB,GAAC,CAAAlB,IAAA,aAAAiB,MACD,WACE,IAAME,EAAgB,CACpB,eAAgB,mBAChB,gBAAiB,iBACjB,wBAAyBC,GAG3B,OAAAC,EAAAA,EAAA,GAAYL,KAAKE,SAAYC,EAC/B,GAAC,CAAAnB,IAAA,UAAAiB,OAAAK,EAAAC,IAAAC,IAAAA,MAED,SAAAC,EAAcC,GAAsB,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfN,EAAQO,mBAAkB,OACf,OADxBN,EAAIG,EAAAI,MACI,QAAIlB,KAAKH,OAAOiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELG,IAAM,CAC3BC,OAAQV,EAAQW,YAChBnD,IAAK8B,KAAKsB,OAASZ,EAAQa,cAC3BrB,QAASF,KAAKwB,aACdX,KAAMF,IACN,OALU,OAKVC,EAAAE,EAAAI,KALML,EAAID,EAAJC,KAAIC,EAAAW,OAAA,SAMLZ,GAAI,eAAAC,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAAAA,EAAAW,OAAA,SAEJX,EAAAY,GAAMC,UAAQ,yBAAAb,EAAAc,OAAA,GAAAnB,EAAA,mBAExB,SAdYoB,GAAA,OAAAvB,EAAAwB,MAAC,KAADC,UAAA,MAFZ,IAAAzB,CAEY,CAzBsB,GC0BrC,QA3BoB,WAajB,OAAAV,KARD,SAAAoC,EACEC,EACAC,EACAd,GACAtB,IAAA,KAAAkC,GAAAjC,IAAA,sBAAAA,IAAA,wBAAAA,IAAA,2BACAC,KAAKiC,SAAWA,EAChBjC,KAAKkC,YAAcA,GAAe,IAAIC,IACtCnC,KAAKoB,OAASA,GAAU,MAC1B,GAAC,EAAApC,IAAA,YAAAiB,MAED,WACE,OAAOD,KAAKoB,MACd,GAAC,CAAApC,IAAA,cAAAiB,MAED,WACE,OAAOD,KAAKiC,QACd,GAAC,CAAAjD,IAAA,mBAAAiB,OAAAmC,EAAA7B,IAAAC,IAAAA,MAED,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeqB,QAAQC,QAAQpD,OAAOqD,YAAYvC,KAAKkC,cAAa,cAAApB,EAAAW,OAAA,SAAAX,EAAAI,MAAA,wBAAAJ,EAAAc,OAAA,GAAAnB,EAAA,UACnE,WAFqB,OAAA2B,EAAAN,MAAC,KAADC,UAAA,MAFrB,IAAAK,CAEqB,CAvBJ,GCFd,EAA+BjE,QAAQ,yDCA7C,MAAM,EAA+BA,QAAQ,iECA7C,MAAM,EAA+BA,QAAQ,sDCA7C,MAAM,EAA+BA,QAAQ,2CCA7C,MAAM,EAA+BA,QAAQ,gDCCvCqE,EAAKrE,EAAAA,KAAAA,SACLsE,EAAOtE,EAAQ,KACfuE,EAAOvE,EAAQ,KACAwE,EAAc,WAUhC,OAAA/C,KALD,SAAA+C,EAAYC,GAAkB9C,IAAA,KAAA6C,GAAA5C,IAAA,wBAAAA,IAAA,wBAAAA,IAAA,wBAAAA,IAAA,wBAC5BC,KAAK4C,SAAWA,EAChB5C,KAAK6C,SAAWJ,EAAKK,OAAO9C,KAAK4C,UACjC5C,KAAK+C,SAAWL,EAAKM,SAAShD,KAAK4C,UACnC5C,KAAKiD,SAAW,EAClB,GAAC,EAAAjE,IAAA,cAAAiB,MACD,SAAYiD,GAEV,OADAlD,KAAKiD,SAAWC,EACTlD,IACT,GACA,CAAAhB,IAAA,eAAAiB,OAAAkD,EAAA5C,IAAAC,IAAAA,MAIA,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACuB,IAAjBhB,KAAKiD,SAAc,CAAAnC,EAAAE,KAAA,eAAAF,EAAAW,OAAA,SACdzB,MAAI,cAAAc,EAAAE,KAAA,EAESwB,EACnBY,SAASpD,KAAK4C,SAAU,CAAES,SAAU,WAAW,OACzC,SAACC,GACN,MAAMA,CACR,IAAE,OAJS,OAAbtD,KAAKiD,SAAQnC,EAAAI,KAAAJ,EAAAW,OAAA,SAKNzB,MAAI,wBAAAc,EAAAc,OAAA,GAAAnB,EAAA,UACZ,WAViB,OAAA0C,EAAArB,MAAC,KAADC,UAAA,KAAA/C,IAAA,UAAAiB,MAWlB,WACE,MAAO,CACL8C,SAAU/C,KAAK+C,SACfE,SAAUjD,KAAKiD,SACfJ,SAAU7C,KAAK6C,SAEnB,KArBA,IAAAM,CAqBC,CApCgC,kRCHI,IA0BlBI,EAAW,SAAAC,GAa9B,SAAAD,IAAc,IAAAE,QASiD,OATjD3D,IAAA,KAAAyD,KACZ,OAAAA,IAAA,CAAM,uBAANE,wEAAoB1D,IAAA0D,EAAA,mBAAA1D,IAAA0D,EAAA,mBAAA1D,IAAA0D,EAAA,sBAAA1D,IAAA0D,EAAA,oBAAA1D,IAAA0D,EAAA,oBAAA1D,IAAA0D,EAAA,qBAAA1D,IAAA0D,EAAA,sBAAA1D,IAAA0D,EAAA,qBAAA1D,IAAA0D,EAAA,uBAAA1D,IAAA0D,EAAA,wBAAA1D,IAAA0D,EAAA,sBAAA1D,IAAA0D,EAAA,kBACpB,CACE,YACA,YACA,aACA,gBACA,cACA,WACAC,SAAQ,SAACC,GAAI,OAAMF,EAAKE,GAA8B,EAAE,IAAGF,CAC/D,CAAC,OAAAG,IAAAL,EAAAC,GAAA5D,IAAA2D,EAAA,EAAAvE,IAAA,aAAAiB,MACD,SAAW4D,EAAkBC,GAC3B,OAAQA,GACN,IAAK,KACH9D,KAAK+D,UAAUC,KAAKH,GACpB,MACF,IAAK,MACH7D,KAAKiE,WAAWD,KAAKH,GACrB,MAEF,QACE7D,KAAKkE,UAAUF,KAAKH,GAGxB,OAAO7D,IACT,GAAC,CAAAhB,IAAA,OAAAiB,MACD,SAAKkE,GAEH,OADAnE,KAAKoE,SAAWD,EACTnE,IACT,GAAC,CAAAhB,IAAA,OAAAiB,MACD,SAAKkE,GAEH,OADAnE,KAAKqE,SAAWF,EACTnE,IACT,GAAC,CAAAhB,IAAA,OAAAiB,MACD,SAAKqE,GAEH,OADAtE,KAAKuE,YAAcD,EACZtE,IACT,GAAC,CAAAhB,IAAA,WAAAiB,MACD,SAASuE,EAAoBC,GAG3B,OAFAzE,KAAKwE,WAAaA,EAClBxE,KAAKyE,aAAeA,EACbzE,IACT,GAAC,CAAAhB,IAAA,KAAAiB,MACD,SAAGiE,GAED,OADAlE,KAAK0E,kBAAkBR,EAAW,MAC3BlE,IACT,GAAC,CAAAhB,IAAA,KAAAiB,MACD,SAAGiE,GAED,OADAlE,KAAK0E,kBAAkBR,EAAW,MAC3BlE,IACT,GAAC,CAAAhB,IAAA,MAAAiB,MACD,SAAIiE,GAEF,OADAlE,KAAK0E,kBAAkBR,EAAW,OAC3BlE,IACT,GAAC,CAAAhB,IAAA,oBAAAiB,MACD,SAAkB0E,EAA2CC,GAAgB,IAAAC,EAAA,KAM3E,OALIC,MAAMC,QAAQJ,GAChBA,EAAaK,KAAI,SAACnB,GAAO,OAAKgB,EAAKI,WAAWpB,EAASe,EAAE,IAEzD5E,KAAKiF,WAAWN,EAAcC,GAEzB5E,IACT,GAAC,CAAAhB,IAAA,UAAAiB,MACD,SAAQiF,GACqB,IAAAC,EAAvBL,MAAMC,QAAQG,IAChBC,EAAAnF,KAAKoF,eAAcpB,KAAIlC,MAAAqD,EAAAE,IAAIH,IAE3BlF,KAAKoF,cAAcpB,KAAKkB,GAE1B,OAAOlF,IACT,GAAC,CAAAhB,IAAA,UAAAiB,MACD,SAAQqF,GAEN,OADAtF,KAAKuF,YAAcD,EACZtF,IACT,GAAC,CAAAhB,IAAA,SAAAiB,MACD,SAAOuF,GACL,GAA0B,iBAAfA,EACTxF,KAAKyF,YAAYzB,KAAK,IAAIrB,EAAe6C,SACpC,GAAIV,MAAMC,QAAQS,GAAa,KAAAE,GACpCA,EAAA1F,KAAKyF,aAAYzB,KAAIlC,MAAA4D,EAAAL,IAAIG,GAC3B,MACExF,KAAKyF,YAAYzB,KAAKwB,GAExB,OAAOxF,IACT,GAAC,CAAAhB,IAAA,SAAAiB,MACD,SAAO0F,EAAa/C,GAClB,IAAMgD,EAAmB,IAAIjD,EAAeC,GAG5C,OAFAgD,EAAiB7C,SAAW4C,EAC5B3F,KAAK6F,QAAQ7B,KAAK4B,GACX5F,IACT,GAAC,CAAAhB,IAAA,wBAAAiB,MACD,SAAsB6D,GACpB,OAAO9D,KAAK8D,EAAO,WAAkCkB,IAAIhF,KAAK8F,cAChE,GAAC,CAAA9G,IAAA,gBAAAiB,MACD,SAAc4D,GACZ,OAAOA,SAAAA,EAASkC,KACZ,GAAAC,OAAGnC,EAAQkC,KAAI,MAAAC,OAAKnC,EAAQoC,MAAK,KAAIC,OACrC,IAAAF,OAAInC,EAAQoC,MAAK,KAAIC,MAC3B,GAAC,CAAAlH,IAAA,mBAAAiB,OAAAmC,EAAA7B,IAAAC,IAAAA,MACD,SAAAC,IAAA,IAAA0F,EAAAC,EAAAC,EAAAC,EAAA,YAAA9F,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKG,GAJDhB,KAAKkC,YAAc,IAAIC,IACvBnC,KAAKkC,YAAYqE,IAAI,YAAavG,KAAKoE,UACnCpE,KAAKqE,UACPrE,KAAKkC,YAAYqE,IAAI,YAAavG,KAAKqE,UAAY,KAEjDrE,KAAKkE,UAAUsC,OAAQ,CAAF1F,EAAAE,KAAA,QACvBhB,KAAKkC,YAAYqE,IAAI,KAAMvG,KAAKyG,sBAAsB,OAAO3F,EAAAE,KAAA,qBAEvD0F,MAAM,0CAAyC,OAOtD,GALG1G,KAAK+D,UAAUyC,QACjBxG,KAAKkC,YAAYqE,IAAI,KAAMvG,KAAKyG,sBAAsB,OAEpDzG,KAAKiE,WAAWuC,QAClBxG,KAAKkC,YAAYqE,IAAI,MAAOvG,KAAKyG,sBAAsB,QAGrC,QAFnBN,EAEGnG,KAAKuE,mBAAW,IAAA4B,IAAhBA,EAAkBF,MAAK,CAAAnF,EAAAE,KAAA,SACzBhB,KAAKkC,YAAYqE,IAAI,SAAUvG,KAAK8F,cAAc9F,KAAKuE,cAAczD,EAAAE,KAAA,uBAE/D0F,MAAM,qCAAoC,QAcjD,GAXD1G,KAAKkC,YAAYqE,IAAI,UAAWvG,KAAKuF,aAEjCvF,KAAKoF,cAAcoB,QACrBxG,KAAKkC,YAAYqE,IAAI,iBAAkBvG,KAAKoF,eAG1CpF,KAAKwE,YACPxE,KAAKkC,YAAYqE,IAAI,cAAevG,KAAKwE,aAEtB,QAAjB4B,EAAApG,KAAKyE,oBAAY,IAAA2B,OAAA,EAAjBA,EAAmBO,MAAO,GAC5B3G,KAAKkC,YAAYqE,IAAI,gBAAiBrH,OAAOqD,YAAYvC,KAAKyE,gBAG5DzE,KAAKyF,YAAYe,SAAUxG,KAAK6F,QAAQW,OAAM,CAAA1F,EAAAE,KAAA,SAM7C,OALGqF,EAAkB,GACxB,CAAC,cAAe,WAAW3C,SAAQ,SAACkD,GAClCN,EAAKM,GAA0ClD,SAAQ,SAAC8B,GACtDa,EAASrC,KAAKwB,EAAWqB,eAC3B,GACF,IAAG/F,EAAAE,KAAA,GACGqB,QAAQyE,IAAIT,GAAUU,MAAK,WAC/B,CAAC,cAAe,WAAWrD,SAAQ,SAACkD,GAC9BN,EAAKM,GAAsCJ,QAC7CF,EAAKpE,YAAYqE,IACfK,EACAN,EAAKM,GAA0C5B,KAAI,SAACQ,GAA0B,OAC5EA,EAAWwB,SAAS,IAI5B,GACF,IAAE,eAAAlG,EAAAE,KAAA,GAAAiG,EAAA1D,EAAA,0BAAA0D,CAAA,mBAAAnG,EAAAW,OAAA,SAAAX,EAAAI,MAAA,yBAAAJ,EAAAc,OAAA,GAAAnB,EAAA,UAGL,WA1DqB,OAAA2B,EAAAN,MAAC,KAADC,UAAA,MADrB,IAAAK,CACqB,CAhHQ,CAASJ,oJC3BK,IACzBkF,EAAgB,SAAAC,GACnC,SAAAD,EAAYvB,EAAa/C,GAAkB,IAAAa,QAErB,OAFqB3D,IAAA,KAAAoH,KACzC,OAAAA,IAAA,CAAMtE,aAANa,yEACKV,SAAW4C,EAAIlC,CACtB,CAAC,OAAAG,IAAAsD,EAAAC,GAAAvH,IAAAsH,EAAA,CAJkC,CAASvE,GCS/B,SAASyE,EAAWvH,GACjC,MAAO,CACLa,QAAS,SAAUuB,GACjB,OAAO,IAAID,EAAeC,EAC5B,EACAoF,KAAM,WACJ,OAAO,IAAIC,CACb,EACAC,OAAQ,WACN,OAAO,IAAI5H,EAAiBE,EAC9B,EAEJ","sources":["webpack://smtp2go-nodejs/external node-commonjs \"fs\"","webpack://smtp2go-nodejs/external commonjs \"mime-types\"","webpack://smtp2go-nodejs/external node-commonjs \"path\"","webpack://smtp2go-nodejs/webpack/bootstrap","webpack://smtp2go-nodejs/webpack/runtime/compat get default export","webpack://smtp2go-nodejs/webpack/runtime/define property getters","webpack://smtp2go-nodejs/webpack/runtime/hasOwnProperty shorthand","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/asyncToGenerator\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/classCallCheck\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/createClass\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/defineProperty\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/regenerator\"","webpack://smtp2go-nodejs/external commonjs \"axios\"","webpack://smtp2go-nodejs/./src/lib/client.ts","webpack://smtp2go-nodejs/./src/lib/service.ts","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/toConsumableArray\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/getPrototypeOf\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/get\"","webpack://smtp2go-nodejs/external commonjs \"@babel/runtime/helpers/inherits\"","webpack://smtp2go-nodejs/./src/lib/mailAttachment.ts","webpack://smtp2go-nodejs/./src/lib/mailService.ts","webpack://smtp2go-nodejs/./src/lib/inlineAttachment.ts","webpack://smtp2go-nodejs/./src/lib/index.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","module.exports = require(\"mime-types\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"axios\");","import BuildsRequest from \"./buildsrequest\";\nimport axios from \"axios\";\nimport packageInfo from '../../package.json';\nexport default class SMTP2GOApiClient {\n  apiKey: string;\n  apiUrl = \"https://api.smtp2go.com/v3/\";\n  headers: Record<string, string> = {};\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  setApiKey(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n  setHeaders(headers: any) {\n    this.headers = headers;\n  }\n  getHeaders() {\n    const presetHeaders = {\n      \"Content-Type\": \"application/json\",\n      'X-Smtp2go-Api': 'smtp2go-nodejs',\n      'X-Smtp2go-Api-Version': packageInfo.version,\n    };\n    //combine preset headers with custom headers but don't allow custom headers to overwrite preset headers\n    return { ...this.headers, ...presetHeaders };\n  }\n\n  async consume(service: BuildsRequest): Promise<any> {\n    const body = await service.buildRequestBody();\n    body[\"api_key\"] = this.apiKey;\n    try {\n      const { data } = await axios({\n        method: service.getMethod(),\n        url: this.apiUrl + service.getEndpoint(),\n        headers: this.getHeaders(),\n        data: body,\n      });\n      return data;\n    } catch (error) {\n      return error.response;\n    }\n  }\n}\n","import BuildsRequest from \"./buildsrequest\";\nimport { Method } from \"axios\";\nclass SMTP2GOService implements BuildsRequest {\n  method: Method;\n  endpoint: string;\n  requestBody?: Map<string, any>;\n\n  constructor(\n    endpoint: string,\n    requestBody?: Map<string, string | boolean>,\n    method?: Method\n  ) {\n    this.endpoint = endpoint;\n    this.requestBody = requestBody || new Map();\n    this.method = method || \"POST\";\n  }\n\n  getMethod(): Method {\n    return this.method;\n  }\n\n  getEndpoint(): string {\n    return this.endpoint;\n  }\n\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    return await Promise.resolve(Object.fromEntries(this.requestBody));\n  }\n}\nexport default SMTP2GOService;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/toConsumableArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","import Attachment from \"./types/attachment\";\nconst fs = require(\"fs\").promises;\nconst mime = require(\"mime-types\");\nconst path = require(\"path\");\nexport default class MailAttachment implements Attachment {\n  filepath: string;\n  filename: string;\n  fileblob: string;\n  mimetype: string;\n  constructor(filepath: string) {\n    this.filepath = filepath;\n    this.mimetype = mime.lookup(this.filepath);\n    this.filename = path.basename(this.filepath);\n    this.fileblob = \"\";\n  }\n  setFileBlob(blob: string): this {\n    this.fileblob = blob;\n    return this;\n  }\n  /**\n   * Get the base64 encoded file content\n   * @returns Promise<string>\n   */\n  async readFileBlob(): Promise<this> {\n    if (this.fileblob != \"\") {\n      return this;\n    }\n    this.fileblob = await fs\n      .readFile(this.filepath, { encoding: \"base64\" })\n      .catch((err: any) => {\n        throw err;\n      });\n    return this;\n  }\n  forSend() {\n    return {\n      filename: this.filename,\n      fileblob: this.fileblob,\n      mimetype: this.mimetype,\n    };\n  }\n}\n","import MailAttachment from \"./mailAttachment\";\nimport SMTP2GOService from \"./service\";\nimport Address from \"./types/address\";\nimport { AddressCollection } from \"./types/addressCollection\";\nimport { AddressType } from \"./types/addressType\";\nimport Attachment from \"./types/attachment\";\nimport { AttachmentCollection } from \"./types/attachmentCollection\";\nimport Header from \"./types/header\";\nimport { HeaderCollection } from \"./types/headerCollection\";\n\ninterface IAddressTypes {\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n}\ninterface ICollections {\n  customHeaders: HeaderCollection | Array<Header>;\n  attachments: AttachmentCollection | Array<Attachment>;\n  inlines: AttachmentCollection | Array<Attachment>;\n  toAddress: AddressCollection | Array<Address>;\n  ccAddress: AddressCollection | Array<Address>;\n  bccAddress: AddressCollection | Array<Address>;\n}\ninterface IAttachmentTypes {\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n}\nexport default class mailService extends SMTP2GOService {\n  htmlBody: string;\n  textBody: string;\n  fromAddress: Address;\n  toAddress: AddressCollection;\n  ccAddress: AddressCollection;\n  bccAddress: AddressCollection;\n  subjectLine: string;\n  templateId: string;\n  templateData: Map<string, string>;\n  customHeaders: HeaderCollection;\n  attachments: AttachmentCollection;\n  inlines: AttachmentCollection;\n  constructor() {\n    super(\"email/send\");\n    [\n      \"toAddress\",\n      \"ccAddress\",\n      \"bccAddress\",\n      \"customHeaders\",\n      \"attachments\",\n      \"inlines\",\n    ].forEach((item) => (this[item as keyof ICollections] = []));\n  }\n  addAddress(address: Address, type?: AddressType) {\n    switch (type) {\n      case \"cc\":\n        this.ccAddress.push(address);\n        break;\n      case \"bcc\":\n        this.bccAddress.push(address);\n        break;\n      case \"to\":\n      default:\n        this.toAddress.push(address);\n        break;\n    }\n    return this;\n  }\n  html(content: string) {\n    this.htmlBody = content;\n    return this;\n  }\n  text(content: string): this {\n    this.textBody = content;\n    return this;\n  }\n  from(from: Address): this {\n    this.fromAddress = from;\n    return this;\n  }\n  template(templateId: string, templateData: Map<string, string>): this {\n    this.templateId = templateId;\n    this.templateData = templateData;\n    return this;\n  }\n  to(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"to\");\n    return this;\n  }\n  cc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"cc\");\n    return this;\n  }\n  bcc(toAddress: Address | AddressCollection): this {\n    this._addAddressOfType(toAddress, \"bcc\");\n    return this;\n  }\n  _addAddressOfType(emailAddress: Address | AddressCollection, t: AddressType) {\n    if (Array.isArray(emailAddress)) {\n      emailAddress.map((address) => this.addAddress(address, t));\n    } else {\n      this.addAddress(emailAddress, t);\n    }\n    return this;\n  }\n  headers(header: Header | HeaderCollection): this {\n    if (Array.isArray(header)) {\n      this.customHeaders.push(...header);\n    } else {\n      this.customHeaders.push(header);\n    }\n    return this;\n  }\n  subject(subject: string): this {\n    this.subjectLine = subject;\n    return this;\n  }\n  attach(attachment: Attachment | AttachmentCollection | string): this {\n    if (typeof attachment === \"string\") {\n      this.attachments.push(new MailAttachment(attachment));\n    } else if (Array.isArray(attachment)) {\n      this.attachments.push(...attachment);\n    } else {\n      this.attachments.push(attachment);\n    }\n    return this;\n  }\n  inline(cid: string, filepath: string): this {\n    const inlineAttachment = new MailAttachment(filepath);\n    inlineAttachment.filename = cid;\n    this.inlines.push(inlineAttachment);\n    return this;\n  }\n  getFormattedAddresses(type: AddressType): Array<string> {\n    return this[type + \"Address\" as keyof IAddressTypes].map(this.formatAddress);\n  }\n  formatAddress(address: Address): string {\n    return address?.name\n      ? `${address.name} <${address.email}>`.trim()\n      : `<${address.email}>`.trim();\n  }\n  async buildRequestBody(): Promise<Record<string, string | boolean>> {\n    this.requestBody = new Map();\n    this.requestBody.set(\"html_body\", this.htmlBody);\n    if (this.textBody) {\n      this.requestBody.set(\"text_body\", this.textBody || \"\");\n    }\n    if (this.toAddress.length) {\n      this.requestBody.set(\"to\", this.getFormattedAddresses(\"to\"));\n    } else {\n      throw Error('At least one \"to\" address is required.');\n    }\n    if (this.ccAddress.length) {\n      this.requestBody.set(\"cc\", this.getFormattedAddresses(\"cc\"));\n    }\n    if (this.bccAddress.length) {\n      this.requestBody.set(\"bcc\", this.getFormattedAddresses(\"bcc\"));\n    }\n\n    if (this.fromAddress?.email) {\n      this.requestBody.set(\"sender\", this.formatAddress(this.fromAddress));\n    } else {\n      throw Error(\"A from email address is required.\");\n    }\n\n    this.requestBody.set(\"subject\", this.subjectLine);\n\n    if (this.customHeaders.length) {\n      this.requestBody.set(\"custom_headers\", this.customHeaders);\n    }\n\n    if (this.templateId) {\n      this.requestBody.set(\"template_id\", this.templateId);\n    }\n    if (this.templateData?.size > 0) {\n      this.requestBody.set(\"template_data\", Object.fromEntries(this.templateData));\n    }\n\n    if (this.attachments.length || this.inlines.length) {\n      const promises: any[] = [];\n      [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n        this[attachmentType as keyof IAttachmentTypes].forEach((attachment: MailAttachment) => {\n          promises.push(attachment.readFileBlob());\n        });\n      });\n      await Promise.all(promises).then(() => {\n        [\"attachments\", \"inlines\"].forEach((attachmentType) => {\n          if (this[attachmentType as keyof ICollections].length) {\n            this.requestBody.set(\n              attachmentType,\n              this[attachmentType as keyof IAttachmentTypes].map((attachment: MailAttachment) =>\n                attachment.forSend()\n              )\n            );\n          }\n        });\n      });\n    }\n    return await super.buildRequestBody();\n  }\n}\n","import MailAttachment from \"./mailAttachment\";\nexport default class InlineAttachment extends MailAttachment {\n  constructor(cid: string, filepath: string) {\n    super(filepath);\n    this.filename = cid;\n  }\n}\n","import SMTP2GOApiClient from \"./client\";\nimport SMTP2GOService from \"./service\";\nimport MailService from \"./mailService\";\nimport MailAttachment from \"./mailAttachment\";\nimport InlineAttachment from \"./inlineAttachment\";\n\nexport { SMTP2GOApiClient as ApiClient };\nexport { SMTP2GOService as Service };\nexport { MailService, MailAttachment, InlineAttachment };\n\nexport default function SMTP2GOApi(apiKey: string) {\n  return {\n    service: function (endpoint: string) {\n      return new SMTP2GOService(endpoint);\n    },\n    mail: function () {\n      return new MailService();\n    },\n    client: function () {\n      return new SMTP2GOApiClient(apiKey);\n    },\n  };\n}\n\n\nexport * from './types/address';\nexport * from './types/addressCollection';\nexport * from './types/addressType';\nexport * from './types/attachment';\nexport * from './types/attachmentCollection';\nexport * from './types/header'; \nexport * from './types/headerCollection';\n\n\n"],"names":["module","exports","__WEBPACK_EXTERNAL_createRequire","url","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","SMTP2GOApiClient","_createClass","apiKey","_classCallCheck","_defineProperty","this","value","headers","presetHeaders","packageInfo","_objectSpread","_consume","_asyncToGenerator","_regeneratorRuntime","_callee","service","body","_yield$axios","data","_context","prev","next","buildRequestBody","sent","axios","method","getMethod","apiUrl","getEndpoint","getHeaders","abrupt","t0","response","stop","_x","apply","arguments","SMTP2GOService","endpoint","requestBody","Map","_buildRequestBody","Promise","resolve","fromEntries","fs","mime","path","MailAttachment","filepath","mimetype","lookup","filename","basename","fileblob","blob","_readFileBlob","readFile","encoding","err","mailService","_SMTP2GOService","_this","forEach","item","_inherits","address","type","ccAddress","push","bccAddress","toAddress","content","htmlBody","textBody","from","fromAddress","templateId","templateData","_addAddressOfType","emailAddress","t","_this2","Array","isArray","map","addAddress","header","_this$customHeaders","customHeaders","_toConsumableArray","subject","subjectLine","attachment","attachments","_this$attachments","cid","inlineAttachment","inlines","formatAddress","name","concat","email","trim","_this$fromAddress","_this$templateData","promises","_this3","set","length","getFormattedAddresses","Error","size","attachmentType","readFileBlob","all","then","forSend","_superPropGet","InlineAttachment","_MailAttachment","SMTP2GOApi","mail","MailService","client"],"sourceRoot":""}